/*
 * WSO2 API Manager - Admin Portal API
 * This specifies a **RESTful API** for WSO2 **API Manager** - Admin Portal.  Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.0.4/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher/src/main/resources/publisher-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification. 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.carbon.apimgt.rest.integration.tests.admin.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * IPCondition
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-16T14:59:16.844+05:30")
public class IPCondition {
  @JsonProperty("ipConditionType")
  private String ipConditionType = null;

  @JsonProperty("specificIP")
  private String specificIP = null;

  @JsonProperty("startingIP")
  private String startingIP = null;

  @JsonProperty("endingIP")
  private String endingIP = null;

  public IPCondition ipConditionType(String ipConditionType) {
    this.ipConditionType = ipConditionType;
    return this;
  }

   /**
   * IPRange and IPSpecific are the supported values 
   * @return ipConditionType
  **/
  @ApiModelProperty(value = "IPRange and IPSpecific are the supported values ")
  public String getIpConditionType() {
    return ipConditionType;
  }

  public void setIpConditionType(String ipConditionType) {
    this.ipConditionType = ipConditionType;
  }

  public IPCondition specificIP(String specificIP) {
    this.specificIP = specificIP;
    return this;
  }

   /**
   * Get specificIP
   * @return specificIP
  **/
  @ApiModelProperty(value = "")
  public String getSpecificIP() {
    return specificIP;
  }

  public void setSpecificIP(String specificIP) {
    this.specificIP = specificIP;
  }

  public IPCondition startingIP(String startingIP) {
    this.startingIP = startingIP;
    return this;
  }

   /**
   * Get startingIP
   * @return startingIP
  **/
  @ApiModelProperty(value = "")
  public String getStartingIP() {
    return startingIP;
  }

  public void setStartingIP(String startingIP) {
    this.startingIP = startingIP;
  }

  public IPCondition endingIP(String endingIP) {
    this.endingIP = endingIP;
    return this;
  }

   /**
   * Get endingIP
   * @return endingIP
  **/
  @ApiModelProperty(value = "")
  public String getEndingIP() {
    return endingIP;
  }

  public void setEndingIP(String endingIP) {
    this.endingIP = endingIP;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IPCondition ipCondition = (IPCondition) o;
    return Objects.equals(this.ipConditionType, ipCondition.ipConditionType) &&
        Objects.equals(this.specificIP, ipCondition.specificIP) &&
        Objects.equals(this.startingIP, ipCondition.startingIP) &&
        Objects.equals(this.endingIP, ipCondition.endingIP);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ipConditionType, specificIP, startingIP, endingIP);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IPCondition {\n");
    
    sb.append("    ipConditionType: ").append(toIndentedString(ipConditionType)).append("\n");
    sb.append("    specificIP: ").append(toIndentedString(specificIP)).append("\n");
    sb.append("    startingIP: ").append(toIndentedString(startingIP)).append("\n");
    sb.append("    endingIP: ").append(toIndentedString(endingIP)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

