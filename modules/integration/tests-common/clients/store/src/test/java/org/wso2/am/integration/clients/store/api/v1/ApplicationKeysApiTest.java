/*
 * WSO2 API Manager - Store
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Store.  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.store.api.v1;

import org.wso2.am.integration.clients.store.api.ApiException;
import org.wso2.am.integration.clients.store.api.v1.dto.ApplicationKeyDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.ApplicationKeyGenerateRequestDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.ApplicationKeyListDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.ApplicationKeyMappingRequestDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.ApplicationKeyReGenerateResponseDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.ErrorDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationKeysApi
 */
@Ignore
public class ApplicationKeysApiTest {

    private final ApplicationKeysApi api = new ApplicationKeysApi();

    
    /**
     * Generate application keys
     *
     * Generate keys (Consumer key/secret) for application 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void applicationsApplicationIdGenerateKeysPostTest() throws ApiException {
        String applicationId = null;
        ApplicationKeyGenerateRequestDTO body = null;
        ApplicationKeyDTO response = api.applicationsApplicationIdGenerateKeysPost(applicationId, body);

        // TODO: test validations
    }
    
    /**
     * Retrieve all application keys
     *
     * Retrieve keys (Consumer key/secret) of application 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void applicationsApplicationIdKeysGetTest() throws ApiException {
        String applicationId = null;
        ApplicationKeyListDTO response = api.applicationsApplicationIdKeysGet(applicationId);

        // TODO: test validations
    }
    
    /**
     * Get key details of a given type 
     *
     * This operation can be used to retrieve key details of an individual application specifying the key type in the URI. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void applicationsApplicationIdKeysKeyTypeGetTest() throws ApiException {
        String applicationId = null;
        String keyType = null;
        String groupId = null;
        ApplicationKeyDTO response = api.applicationsApplicationIdKeysKeyTypeGet(applicationId, keyType, groupId);

        // TODO: test validations
    }
    
    /**
     * Update grant types and callback url of an application 
     *
     * This operation can be used to update grant types and callback url of an application. (Consumer Key and Consumer Secret are ignored) Upon succesfull you will retrieve the updated key details as the response. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void applicationsApplicationIdKeysKeyTypePutTest() throws ApiException {
        String applicationId = null;
        String keyType = null;
        ApplicationKeyDTO body = null;
        ApplicationKeyDTO response = api.applicationsApplicationIdKeysKeyTypePut(applicationId, keyType, body);

        // TODO: test validations
    }
    
    /**
     * Re-generate consumer secret 
     *
     * This operation can be used to re generate consumer secret for an application for the give key type 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void applicationsApplicationIdKeysKeyTypeRegenerateSecretPostTest() throws ApiException {
        String applicationId = null;
        String keyType = null;
        ApplicationKeyReGenerateResponseDTO response = api.applicationsApplicationIdKeysKeyTypeRegenerateSecretPost(applicationId, keyType);

        // TODO: test validations
    }
    
    /**
     * Map application keys
     *
     * Map keys (Consumer key/secret) to an application 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void applicationsApplicationIdMapKeysPostTest() throws ApiException {
        String applicationId = null;
        ApplicationKeyMappingRequestDTO body = null;
        ApplicationKeyDTO response = api.applicationsApplicationIdMapKeysPost(applicationId, body);

        // TODO: test validations
    }
    
}
