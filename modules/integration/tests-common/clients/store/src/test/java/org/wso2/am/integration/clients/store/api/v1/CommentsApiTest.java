/*
 * WSO2 API Manager - Store
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Store.  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.store.api.v1;

import org.wso2.am.integration.clients.store.api.ApiException;
import org.wso2.am.integration.clients.store.api.v1.dto.CommentDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.CommentListDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.ErrorDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CommentsApi
 */
@Ignore
public class CommentsApiTest {

    private final CommentsApi api = new CommentsApi();

    
    /**
     * Delete an API comment
     *
     * Remove a Comment 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdCommentsCommentIdDeleteTest() throws ApiException {
        String commentId = null;
        String apiId = null;
        String ifMatch = null;
        api.apisApiIdCommentsCommentIdDelete(commentId, apiId, ifMatch);

        // TODO: test validations
    }
    
    /**
     * Get details of an API comment
     *
     * Get the individual comment given by a username for a certain API. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdCommentsCommentIdGetTest() throws ApiException {
        String commentId = null;
        String apiId = null;
        String ifNoneMatch = null;
        CommentDTO response = api.apisApiIdCommentsCommentIdGet(commentId, apiId, ifNoneMatch);

        // TODO: test validations
    }
    
    /**
     * Update an API comment
     *
     * Update a certain Comment 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdCommentsCommentIdPutTest() throws ApiException {
        String commentId = null;
        String apiId = null;
        CommentDTO body = null;
        String ifMatch = null;
        CommentDTO response = api.apisApiIdCommentsCommentIdPut(commentId, apiId, body, ifMatch);

        // TODO: test validations
    }
    
    /**
     * Retrieve API comments
     *
     * Get a list of Comments that are already added to APIs 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdCommentsGetTest() throws ApiException {
        String apiId = null;
        Integer limit = null;
        Integer offset = null;
        CommentListDTO response = api.apisApiIdCommentsGet(apiId, limit, offset);

        // TODO: test validations
    }
    
    /**
     * Add an API comment
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdCommentsPostTest() throws ApiException {
        String apiId = null;
        CommentDTO body = null;
        CommentDTO response = api.apisApiIdCommentsPost(apiId, body);

        // TODO: test validations
    }
    
}
