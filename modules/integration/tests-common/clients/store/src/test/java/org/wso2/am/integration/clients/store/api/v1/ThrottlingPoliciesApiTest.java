/*
 * WSO2 API Manager - Store
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Store.  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.store.api.v1;

import org.wso2.am.integration.clients.store.api.ApiException;
import org.wso2.am.integration.clients.store.api.v1.dto.ErrorDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.ThrottlingPolicyDTO;
import org.wso2.am.integration.clients.store.api.v1.dto.ThrottlingPolicyListDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ThrottlingPoliciesApi
 */
@Ignore
public class ThrottlingPoliciesApiTest {

    private final ThrottlingPoliciesApi api = new ThrottlingPoliciesApi();

    
    /**
     * Get all available throttling policies
     *
     * Get available Throttling Policies 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void throttlingPoliciesPolicyLevelGetTest() throws ApiException {
        String policyLevel = null;
        Integer limit = null;
        Integer offset = null;
        String ifNoneMatch = null;
        String xWSO2Tenant = null;
        List<ThrottlingPolicyListDTO> response = api.throttlingPoliciesPolicyLevelGet(policyLevel, limit, offset, ifNoneMatch, xWSO2Tenant);

        // TODO: test validations
    }
    
    /**
     * Get details of a throttling policy 
     *
     * This operation can be used to retrieve details of a single throttling policy by specifying the policy level and policy name.  &#x60;X-WSO2-Tenant&#x60; header can be used to retrive throttling policy that belongs to a different tenant domain. If not specified super tenant will be used. If Authorization header is present in the request, the user&#39;s tenant associated with the access token will be used. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void throttlingPoliciesPolicyLevelPolicyIdGetTest() throws ApiException {
        String policyId = null;
        String policyLevel = null;
        String xWSO2Tenant = null;
        String ifNoneMatch = null;
        ThrottlingPolicyDTO response = api.throttlingPoliciesPolicyLevelPolicyIdGet(policyId, policyLevel, xWSO2Tenant, ifNoneMatch);

        // TODO: test validations
    }
    
}
