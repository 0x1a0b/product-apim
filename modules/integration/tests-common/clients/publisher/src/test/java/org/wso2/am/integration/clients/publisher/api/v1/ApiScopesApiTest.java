/*
 * WSO2 API Manager - Publisher API
 * This specifies a **RESTful API** for WSO2 **API Manager** - Publisher.  Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.0.4/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher/src/main/resources/publisher-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification. 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.publisher.api.v1;

import org.wso2.am.integration.clients.publisher.api.ApiException;
import org.wso2.am.integration.clients.publisher.api.v1.dto.ErrorDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.ScopeDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.ScopeListDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApiScopesApi
 */
@Ignore
public class ApiScopesApiTest {

    private final ApiScopesApi api = new ApiScopesApi();

    
    /**
     * Get a list of scopes of an API
     *
     * This operation can be used to retrieve a list of scopes belonging to an API by providing the id of the API. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdScopesGetTest() throws ApiException {
        String apiId = null;
        String ifNoneMatch = null;
        ScopeListDTO response = api.apisApiIdScopesGet(apiId, ifNoneMatch);

        // TODO: test validations
    }
    
    /**
     * Delete a scope of an API
     *
     * This operation can be used to delete a scope associated with an API. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdScopesNameDeleteTest() throws ApiException {
        String apiId = null;
        String name = null;
        String ifMatch = null;
        api.apisApiIdScopesNameDelete(apiId, name, ifMatch);

        // TODO: test validations
    }
    
    /**
     * Get a scope of an API
     *
     * This operation can be used to retrieve a particular scope&#39;s metadata associated with an API. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdScopesNameGetTest() throws ApiException {
        String apiId = null;
        String name = null;
        String ifNoneMatch = null;
        ScopeDTO response = api.apisApiIdScopesNameGet(apiId, name, ifNoneMatch);

        // TODO: test validations
    }
    
    /**
     * Update a Scope of an API
     *
     * This operation can be used to update scope of an API 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdScopesNamePutTest() throws ApiException {
        String apiId = null;
        String name = null;
        ScopeDTO body = null;
        String ifMatch = null;
        ScopeDTO response = api.apisApiIdScopesNamePut(apiId, name, body, ifMatch);

        // TODO: test validations
    }
    
    /**
     * Add a new scope to an API
     *
     * This operation can be used to add a new scope to an API. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdScopesPostTest() throws ApiException {
        String apiId = null;
        ScopeDTO body = null;
        String ifMatch = null;
        ScopeDTO response = api.apisApiIdScopesPost(apiId, body, ifMatch);

        // TODO: test validations
    }
    
}
