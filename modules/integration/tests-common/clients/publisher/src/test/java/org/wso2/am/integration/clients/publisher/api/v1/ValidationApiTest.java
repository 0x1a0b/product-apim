/*
 * WSO2 API Manager - Publisher API
 * This specifies a **RESTful API** for WSO2 **API Manager** - Publisher.  Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.0.4/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher/src/main/resources/publisher-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification. 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.publisher.api.v1;

import org.wso2.am.integration.clients.publisher.api.ApiException;
import org.wso2.am.integration.clients.publisher.api.v1.dto.ErrorDTO;
import java.io.File;
import org.wso2.am.integration.clients.publisher.api.v1.dto.GraphQLValidationResponseDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.OpenAPIDefinitionValidationResponseDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.WSDLValidationResponseDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ValidationApi
 */
@Ignore
public class ValidationApiTest {

    private final ValidationApi api = new ValidationApi();

    
    /**
     * Validate GraphQL API definition and retrieve a summary
     *
     * This operation can be used to validate a graphQL definition and retrieve a summary. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisValidateGraphqlSchemaPostTest() throws ApiException {
        File file = null;
        GraphQLValidationResponseDTO response = api.apisValidateGraphqlSchemaPost(file);

        // TODO: test validations
    }
    
    /**
     * Check given API attibute name is already exist.
     *
     * Using this operation, you can check a given API context is already used. You need to provide the context name you want to check. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateAPITest() throws ApiException {
        String query = null;
        String ifNoneMatch = null;
        api.validateAPI(query, ifNoneMatch);

        // TODO: test validations
    }
    
    /**
     * Validate an OpenAPI Definition
     *
     * This operation can be used to validate an OpenAPI definition and retrieve a summary. Provide either &#x60;url&#x60; or &#x60;file&#x60; to specify the definition. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateOpenAPIDefinitionTest() throws ApiException {
        String url = null;
        File file = null;
        Boolean returnContent = null;
        OpenAPIDefinitionValidationResponseDTO response = api.validateOpenAPIDefinition(url, file, returnContent);

        // TODO: test validations
    }
    
    /**
     * Validate a WSDL Definition
     *
     * This operation can be used to validate a WSDL definition and retrieve a summary. Provide either &#x60;url&#x60; or &#x60;file&#x60; to specify the definition. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validateWSDLDefinitionTest() throws ApiException {
        String url = null;
        File file = null;
        WSDLValidationResponseDTO response = api.validateWSDLDefinition(url, file);

        // TODO: test validations
    }
    
}
