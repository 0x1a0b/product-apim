/*
 * WSO2 API Manager - Publisher API
 * This specifies a **RESTful API** for WSO2 **API Manager** - Publisher.  Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.0.4/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher/src/main/resources/publisher-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification. 
 *
 * OpenAPI spec version: v1.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.publisher.api.v1;

import org.wso2.am.integration.clients.publisher.api.ApiException;
import org.wso2.am.integration.clients.publisher.api.v1.dto.DocumentDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.ErrorDTO;
import java.io.File;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DocumentIndividualApi
 */
@Ignore
public class DocumentIndividualApiTest {

    private final DocumentIndividualApi api = new DocumentIndividualApi();

    
    /**
     * Get the content of an API document
     *
     * This operation can be used to retrive the content of an API&#39;s document.  The document can be of 3 types. In each cases responses are different.  1. **Inline type**:    The content of the document will be retrieved in &#x60;text/plain&#x60; content type     _Sample cURL_ : &#x60;curl -k -H \&quot;Authorization:Bearer 579f0af4-37be-35c7-81a4-f1f1e9ee7c51\&quot; -F inlineContent&#x3D;@\&quot;docs.txt\&quot; -X POST \&quot;https://localhost:9443/api/am/publisher/v1/apis/995a4972-3178-4b17-a374-756e0e19127c/documents/43c2bcce-60e7-405f-bc36-e39c0c5e189e/content&#x60; 2. **FILE type**:    The file will be downloaded with the related content type (eg. &#x60;application/pdf&#x60;) 3. **URL type**:     The client will recieve the URL of the document as the Location header with the response with - &#x60;303 See Other&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdDocumentsDocumentIdContentGetTest() throws ApiException {
        String apiId = null;
        String documentId = null;
        String ifNoneMatch = null;
        api.apisApiIdDocumentsDocumentIdContentGet(apiId, documentId, ifNoneMatch);

        // TODO: test validations
    }
    
    /**
     * Upload the content of an API document
     *
     * Thid operation can be used to upload a file or add inline content to an API document.  **IMPORTANT:** * Either **file** or **inlineContent** form data parameters should be specified at one time. * Document&#39;s source type should be **FILE** in order to upload a file to the document using **file** parameter. * Document&#39;s source type should be **INLINE** in order to add inline content to the document using **inlineContent** parameter. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdDocumentsDocumentIdContentPostTest() throws ApiException {
        String apiId = null;
        String documentId = null;
        File file = null;
        String inlineContent = null;
        String ifMatch = null;
        DocumentDTO response = api.apisApiIdDocumentsDocumentIdContentPost(apiId, documentId, file, inlineContent, ifMatch);

        // TODO: test validations
    }
    
    /**
     * Delete a document of an API
     *
     * This operation can be used to delete a document associated with an API. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdDocumentsDocumentIdDeleteTest() throws ApiException {
        String apiId = null;
        String documentId = null;
        String ifMatch = null;
        api.apisApiIdDocumentsDocumentIdDelete(apiId, documentId, ifMatch);

        // TODO: test validations
    }
    
    /**
     * Get a document of an API
     *
     * This operation can be used to retrieve a particular document&#39;s metadata associated with an API. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdDocumentsDocumentIdGetTest() throws ApiException {
        String apiId = null;
        String documentId = null;
        String ifNoneMatch = null;
        DocumentDTO response = api.apisApiIdDocumentsDocumentIdGet(apiId, documentId, ifNoneMatch);

        // TODO: test validations
    }
    
    /**
     * Update a document of an API
     *
     * This operation can be used to update metadata of an API&#39;s document. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdDocumentsDocumentIdPutTest() throws ApiException {
        String apiId = null;
        String documentId = null;
        DocumentDTO body = null;
        String ifMatch = null;
        DocumentDTO response = api.apisApiIdDocumentsDocumentIdPut(apiId, documentId, body, ifMatch);

        // TODO: test validations
    }
    
}
