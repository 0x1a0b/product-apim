{
  "database.apim_db.driver": "org.h2.Driver",
  "database.apim_db.url": "jdbc:h2:./repository/database/WSO2AM_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000",
  "database.apim_db.validationQuery": "SELECT 1",
  "database.apim_db.username": "wso2carbon",
  "database.apim_db.password": "wso2carbon",
  "database.apim_db.pool_options.maxActive": "5",
  "apim.gateway.gateway_environments": [
    "dev"
  ],
  "apim.gateway.environment.dev.name": "Production and Sandbox",
  "apim.gateway.environment.dev.type": "hybrid",
  "apim.gateway.environment.dev.display_in_api_console": true,
  "apim.gateway.environment.dev.description": "This is a hybrid gateway that handles both production and sandbox token traffic.",
  "apim.gateway.environment.dev.isDefault": true,
  "apim.gateway.environment.dev.management_endpoint": "https://localhost:${mgt.transport.https.port}${carbon.context}services/",
  "apim.gateway.environment.dev.loadbalance_endpoint": "http://${carbon.local.ip}:${http.nio.port},https://${carbon.local.ip}:${https.nio.port}",
  "apim.gateway.environment.dev.ws_loadbalance_endpoint": "ws://${carbon.local.ip}:9099",
  "apim.store.endpoint": "https://store.abc.com:443/store",
  "apim.store.revoke_api_endpoint": "https://localhost:8243/revoke",
  "apim.traffic_manager.publisher_nodes": "{tcp://localhost:9611}",
  "apim.traffic_manager.authentication_nodes": "{ssl://localhost:9711}",
  "apim.traffic_manager.throttle_decision_endpoints": "amqp://${admin.username}:${admin.password}@clientid/carbon?brokerlist='tcp://${carbon.local.ip}:${jms.port}'",
  "apim.traffic_manager.mgt_endpoint": "tm.wso2.com:9443",
  "apim.analytics.nodes": "{tcp://localhost:7611}",
  "apim.analytics.management_endpoint": "localhost:7444",
  "apim.key_mgr_node.endpoint": "localhost:9443",
  "message_formatters": [
    {
      "content_type": "text/html",
      "class": "org.apache.axis2.transport.http.ApplicationXMLFormatter"
    },
    {
      "content_type": "text/plain",
      "class": "org.apache.axis2.format.PlainTextFormatter"
    },
    {
      "content_type": "application/json",
      "class": "org.apache.synapse.commons.json.JsonStreamFormatter"
    },
    {
      "content_type": "text/javascript",
      "class": "org.apache.axis2.json.JSONMessageFormatter"
    },
    {
      "content_type": "application/octet-stream",
      "class": "org.wso2.carbon.relay.ExpandingMessageFormatter"
    },
    {
      "content_type": "application/x-www-form-urlencoded",
      "class": "org.apache.axis2.transport.http.XFormURLEncodedFormatter"
    },
    {
      "content_type": "multipart/form-data",
      "class": "org.apache.axis2.transport.http.MultipartFormDataFormatter"
    },
    {
      "content_type": "application/xml",
      "class": "org.apache.axis2.transport.http.ApplicationXMLFormatter"
    },
    {
      "content_type": "text/xml",
      "class": "org.apache.axis2.transport.http.SOAPMessageFormatter"
    },
    {
      "content_type": "application/soap+xml",
      "class": "org.apache.axis2.transport.http.SOAPMessageFormatter"
    },
    {
      "content_type": "application/json/badgerfish",
      "class": "org.apache.axis2.json.JSONBadgerfishMessageFormatter"
    }
  ],
  "message_builders": [
    {
      "content_type": "text/html",
      "class": "org.wso2.carbon.relay.BinaryRelayBuilder"
    },
    {
      "content_type": "application/x-www-form-urlencoded",
      "class": "org.apache.synapse.commons.builders.XFormURLEncodedBuilder"
    },
    {
      "content_type": "text/plain",
      "class": "org.apache.axis2.format.PlainTextBuilder"
    },
    {
      "content_type": "application/json",
      "class": "org.apache.synapse.commons.json.JsonStreamBuilder"
    },
    {
      "content_type": "text/javascript",
      "class": "org.apache.axis2.json.JSONBuilder"
    },
    {
      "content_type": "application/octet-stream",
      "class": "org.wso2.carbon.relay.BinaryRelayBuilder"
    },
    {
      "content_type": "application/xml",
      "class": "org.apache.axis2.builder.ApplicationXMLBuilder"
    },
    {
      "content_type": "multipart/form-data",
      "class": "org.apache.axis2.builder.MultipartFormDataBuilder"
    },
    {
      "content_type": "application/json/badgerfish",
      "class": "org.apache.axis2.json.JSONBadgerfishOMBuilder"
    }
  ],
  "transport.passthru_http.listener.class": "org.apache.synapse.transport.passthru.PassThroughHttpListener",
  "transport.passthru_http.parameters": {
    "port": "8280",
    "non-blocking": true,
    "httpGetProcessor": "org.wso2.carbon.mediation.transport.handlers.PassThroughNHttpGetProcessor"
  },
  "transport.passthru_https.listener.class": "org.apache.synapse.transport.passthru.PassThroughHttpMultiSSLListener",
  "transport.passthru_https.listener.parameters": {
    "port": "8243",
    "non-blocking": true,
    "httpGetProcessor": "org.wso2.carbon.mediation.transport.handlers.PassThroughNHttpGetProcessor",
    "SSLVerifyClient": "optional"
  },
  "transport.passthru_https.listener.key_store.location": "repository/resources/security/$conf{keystore.tls.file_name}",
  "transport.passthru_https.listener.key_store.type": "$conf{keystore.tls.type}",
  "transport.passthru_https.listener.key_store.password": "$conf{keystore.tls.password}",
  "transport.passthru_https.listener.key_store.key_password": "$conf{keystore.tls.key_password}",
  "transport.passthru_https.listener.trust_store.location": "repository/resources/security/$conf{truststore.file_name}",
  "transport.passthru_https.listener.trust_store.type": "$conf{truststore.type}",
  "transport.passthru_https.listener.trust_store.password": "$conf{truststore.password}",
  "transport.passthru_https.listener.ssl_profile.file_path": "repository/resources/security/listenerprofiles.xml",
  "transport.passthru_https.listener.ssl_profile.interval": "600000",
  "transport.passthru_http.sender.class": "org.apache.synapse.transport.passthru.PassThroughHttpSender",
  "transport.passthru_http.sender.parameters": {
    "non-blocking": true
  },
  "transport.passthru_https.sender.class": "org.apache.synapse.transport.passthru.PassThroughHttpSSLSender",
  "transport.passthru_https.sender.parameters": {
    "non-blocking": true
  },
  "transport.passthru_https.sender.key_store.location": "repository/resources/security/$conf{keystore.tls.file_name}",
  "transport.passthru_https.sender.key_store.type": "$conf{keystore.tls.type}",
  "transport.passthru_https.sender.key_store.password": "$conf{keystore.tls.password}",
  "transport.passthru_https.sender.key_store.key_password": "$conf{keystore.tls.key_password}",
  "transport.passthru_https.sender.trust_store.location": "repository/resources/security/$conf{truststore.file_name}",
  "transport.passthru_https.sender.trust_store.type": "$conf{truststore.type}",
  "transport.passthru_https.sender.trust_store.password": "$conf{truststore.password}",
  "transport.passthru_https.sender.ssl_profile.file_path": "repository/resources/security/sslprofiles.xml",
  "transport.passthru_https.sender.ssl_profile.interval": "600000",
  "transport.jms.sender.class": "org.apache.axis2.transport.jms.JMSSender",
  "transport.ws.sender.class": "org.wso2.carbon.websocket.transport.WebsocketTransportSender",
  "transport.ws.sender.parameters": {
    "ws.outflow.dispatch.sequence": "outflowDispatchSeq",
    "ws.outflow.dispatch.fault.sequence": "outflowFaultSeq"
  },
  "transport.wss.sender.class": "org.wso2.carbon.websocket.transport.WebsocketTransportSender",
  "transport.wss.sender.parameters": {
    "ws.outflow.dispatch.sequence": "outflowDispatchSeq",
    "ws.outflow.dispatch.fault.sequence": "outflowFaultSeq"
  },
  "transport.wss.sender.trust_store.location": "repository/resources/security/$conf{truststore.file_name}",
  "transport.wss.sender.trust_store.password": "$conf{truststore.password}",
  "transport.blocking_http.sender.class": "org.apache.axis2.transport.http.CommonsHTTPTransportSender",
  "transport.blocking_http.sender.parameters": {
    "PROTOCOL": "HTTP/1.1",
    "Transfer-Encoding": "chunked",
    "cacheHttpClient": true,
    "defaultMaxConnectionsPerHost": "200"
  },
  "transport.blocking_https.sender.class": "org.apache.axis2.transport.http.CommonsHTTPTransportSender",
  "transport.blocking_https.sender.parameters": {
    "PROTOCOL": "HTTP/1.1",
    "Transfer-Encoding": "chunked",
    "cacheHttpClient": true,
    "defaultMaxConnectionsPerHost": "200"
  },
  "enabled_global_handlers": [
    "external_call_logger"
  ],
  "synapse_handlers.external_call_logger.name": "externalCallLogger",
  "synapse_handlers.external_call_logger.class": "org.wso2.carbon.apimgt.gateway.handlers.LogsHandler",
  "synapse_properties.'synapse.sal.endpoints.sesssion.timeout.default'": "600000",
  "synapse_properties.'synapse.global_timeout_interval'": "120000",
  "synapse_properties.'statistics.clean.enable'": "false",
  "synapse_properties.'synapse.observers'": "org.wso2.carbon.mediation.dependency.mgt.DependencyTracker",
  "synapse_properties.'synapse.temp_data.chunk.size'": "3072",
  "synapse_properties.'synapse.xpath.func.extensions'": "org.wso2.carbon.mediation.security.vault.xpath.SecureVaultLookupXPathFunctionProvider",
  "synapse_properties.'synapse.carbon.ext.tenant.info'": "org.wso2.carbon.mediation.initializer.handler.CarbonTenantInfoConfigurator",
  "synapse_properties.'synapse.carbon.ext.tenant.info.initiator'": "org.wso2.carbon.mediation.initializer.handler.CarbonTenantInfoInitiator",
  "passthru_http.'http.socket.timeout'": "180000",
  "passthru_http.'worker_pool_size_core'": "400",
  "passthru_http.'worker_pool_size_max'": "500",
  "passthru_http.'io_buffer_size'": "16384",
  "passthru_http.'http.socket.reuseaddr'": "true",
  "passthru_http.'http.headers.preserve'": "Content-Type",
  "passthru_http.'rest_uri_api_regex'": "\\w+://.+:\\d+/t/.*|\\w+://.+\\w+/t/.*|^(/t/).*",
  "passthru_http.'rest_uri_proxy_regex'": "\\w+://.+:\\d+/services/t/.*|\\w+://.+\\w+/services/t/.*|^(/services/t/).*",
  "ssl_profiles.enabled_ssl_profiles" : ["profile1"],
  "ssl_profiles.profile1.servers" : "*",
  "ssl_profiles.profile1.key_store.location" : "$conf{transport.passthru_https.listener.key_store.location}",
  "ssl_profiles.profile1.key_store.type" : "$conf{transport.passthru_https.listener.key_store.type}",
  "ssl_profiles.profile1.key_store.password" : "$conf{transport.passthru_https.listener.key_store.password}",
  "ssl_profiles.profile1.key_store.key_password" : "$conf{transport.passthru_https.listener.key_store.key_password}",
  "ssl_profiles.profile1.trust_store.location" : "$conf{transport.passthru_https.listener.trust_store.location}",
  "ssl_profiles.profile1.trust_store.type" : "$conf{transport.passthru_https.listener.trust_store.type}",
  "ssl_profiles.profile1.trust_store.password" : "$conf{transport.passthru_https.listener.trust_store.password}",
  "listener_profiles.enabled_ssl_profiles" : ["profile1"],
  "listener_profiles.profile1.bind_address" : "0.0.0.0",
  "listener_profiles.profile1.key_store.location" : "$conf{transport.passthru_https.listener.key_store.location}",
  "listener_profiles.profile1.key_store.type" : "$conf{transport.passthru_https.listener.key_store.type}",
  "listener_profiles.profile1.key_store.password" : "$conf{transport.passthru_https.listener.key_store.password}",
  "listener_profiles.profile1.key_store.key_password" : "$conf{transport.passthru_https.listener.key_store.key_password}",
  "listener_profiles.profile1.trust_store.location" : "$conf{transport.passthru_https.listener.trust_store.location}",
  "listener_profiles.profile1.trust_store.type" : "$conf{transport.passthru_https.listener.trust_store.type}",
  "listener_profiles.profile1.trust_store.password" : "$conf{transport.passthru_https.listener.trust_store.password}",

  "apim.datasource.name": "jdbc/WSO2AM_DB",
  "apim.gateway_type": "Synapse",
  "apim.secure_vault": "false",
  "apim.mutual_tls": "true",

  "apim.auth_manager.url": "https://localhost:${mgt.transport.https.port}${carbon.context}services/",
  "apim.auth_manager.username": "${admin.username}",
  "apim.auth_manager.password": "${admin.password}",
  "apim.auth_manager.check_permission_remotely": "false",

  "apim.jwt.header": "X-JWT-Assertion",
  "apim.jwt.dialect": "http://wso2.org/claims",
  "apim.jwt.algo": "SHA256withRSA",
  "apim.cache.token": "true",
  "apim.cache.resource": "true",
  "apim.cache.km_token": "false",
  "apim.cache.recent_api": "false",
  "apim.cache.scope": "true",
  "apim.cache.publisher_role": "true",
  "apim.cache.claim_expiry_time": "900",
  "apim.cache.token_expiry_time": "900",
  "apim.cache.tag_duration": "120000",
  "apim.cache.jwt_claim": "true",

  "apim.analytics.enabled": "false",
  "apim.analytics.receiver_urls": "{tcp://localhost:7612}",
  "apim.analytics.receiver_auth_urls": "{ssl://localhost:7712}",
  "apim.analytics.receiver_username": "${admin.username}",
  "apim.analytics.receiver_password": "${admin.password}",
  "apim.analytics.provider_impl": "org.wso2.carbon.apimgt.usage.client.impl.APIUsageStatisticsRestClientImpl",
  "apim.analytics.rest_api_url": "https://localhost:7444",
  "apim.analytics.rest_api_username": "${admin.username}",
  "apim.analytics.rest_api_password": "${admin.password}",
  "apim.analytics.disable_event_publishing": "false",
  "apim.analytics.disable_wf_events": "false",
  "apim.analytics.event_publisher_impl": "org.wso2.carbon.apimgt.usage.publisher.APIMgtUsageDataBridgeDataPublisher",
  "apim.analytics.publish_response_size": "false",

  "apim.key_mgt.url": "https://localhost:${mgt.transport.https.port}${carbon.context}services/",
  "apim.key_mgt.username": "${admin.username}",
  "apim.key_mgt.password": "${admin.password}",
  "apim.key_mgt.client_type": "WSClient",
  "apim.key_mgt.thrift_timeout": "10000",
  "apim.key_mgt.thrift_client_port": "10397",
  "apim.key_mgt.thrift_server_host": "localhost",
  "apim.key_mgt.thrift_server_port": "10397",
  "apim.key_mgt.enable_thrift_server": "false",
  "apim.key_mgt.pool.max_idle": "100",
  "apim.key_mgt.pool.init_idle_capacity": "50",
  "apim.key_mgt.validation_handler": "org.wso2.carbon.apimgt.keymgt.handlers.DefaultKeyValidationHandler",

  "apim.oauth.remove_auth_header": "true",
  "apim.oauth.auth_header": "Authorization",
  "apim.oauth.default_app_scope": "am_application_scope",
  "apim.oauth.token_endpoint": "/oauth2/token",
  "apim.oauth.revoke_endpoint": "https://localhost:${https.nio.port}/revoke",
  "apim.oauth.encrypt_persisted_token": "false",
  "apim.oauth.enable_token_hash_mode": "false",

  "apim.throttling.enable_unlimited_tier": "true",

  "apim.store.enable_application_share": "false",
  "apim.store.group_extractor": "org.wso2.carbon.apimgt.impl.DefaultGroupIDExtractorImpl",
  "apim.store.login_username_case_insensitive": "true",
  "apim.store.display_url": "false",
  "apim.store.url": "https://localhost:${mgt.transport.https.port}/store",
  "apim.store.service_url": "https://localhost:${mgt.transport.https.port}${carbon.context}services",
  "apim.store.username": "${admin.username}",
  "apim.store.password": "${admin.password}",
  "apim.store.display_multiple_versions": "false",
  "apim.store.display_all_apis": "false",
  "apim.store.enable_comments": "true",
  "apim.store.enable_ratings": "true",
  "apim.store.enable_forum": "true",
  "apim.store.token_display_url": "https://${carbon.local.ip}:${https.nio.port}",

  "apim.publisher.display_url": "false",
  "apim.publisher.url": "https://localhost:${mgt.transport.https.port}/publisher",
  "apim.publisher.enable_access_control": "true",

  "apim.cors.enable": "true",
  "apim.cors.allow_origins": "*",
  "apim.cors.allow_methods": "GET,PUT,POST,DELETE,PATCH,OPTIONS",
  "apim.cors.allow_headers": "authorization,Access-Control-Allow-Origin,Content-Type,SOAPAction",
  "apim.cors.allow_credentials": "false",

  "apim.throttling.advanced_throttling": "true",
  "apim.throttling.tm.event_type": "Binary",
  "apim.throttling.tm.receiver_urls": "tcp://${carbon.local.ip}:${receiver.url.port}",
  "apim.throttling.tm.receiver_auth_urls": "ssl://${carbon.local.ip}:${auth.url.port}",
  "apim.throttling.tm.receiver_username": "${admin.username}",
  "apim.throttling.tm.receiver_password": "${admin.password}",
  "apim.throttling.publisher.enable": "true",
  "apim.throttling.publisher.max_idle": "1000",
  "apim.throttling.publisher.init_idle_size": "200",
  "apim.throttling.publisher.pool_size": "200",
  "apim.throttling.publisher.max_pool_size": "1000",
  "apim.throttling.publisher.keep_alive_time": "200",
  "apim.throttling.policy_deploy.enable": "true",
  "apim.throttling.policy_deploy.service_url": "https://localhost:${mgt.transport.https.port}${carbon.context}services/",
  "apim.throttling.policy_deploy.user": "${admin.username}",
  "apim.throttling.policy_deploy.pass": "${admin.password}",
  "apim.throttling.block_condition.enable": "true",
  "apim.throttling.block_condition.start_delay": "300000",
  "apim.throttling.block_condition.period": "3600000",
  "apim.throttling.jms.enable": "true",
  "apim.throttling.jms.destination": "throttleData",
  "apim.throttling.jms.start_delay": "300000",
  "apim.throttling.jms.conn_jndi_name": "TopicConnectionFactory",
  "apim.throttling.jms.destination_type": "topic",
  "apim.throttling.jms.java_naming_factory_initial": "org.wso2.andes.jndi.PropertiesFileInitialContextFactory",
  "apim.throttling.jms.topic_connection_factory": "amqp://${admin.username}:${admin.password}@clientid/carbon?brokerlist='tcp://${carbon.local.ip}:${jms.port}'",
  "apim.throttling.unlimited_tier": "true",
  "apim.throttling.header_condition": "false",
  "apim.throttling.jwt_claim_condition": "false",
  "apim.throttling.query_param_condition": "false",

  "apim.workflow.enabled": "false",
  "apim.workflow.wf_engine_url": "https://localhost:9445/bpmn",
  "apim.workflow.wf_engine_user": "${admin.username}",
  "apim.workflow.wf_engine_pass": "${admin.password}",
  "apim.workflow.callback_endpoint": "https://localhost:${mgt.transport.https.port}/api/am/publisher/v0.14/workflows/update-workflow-status",
  "apim.workflow.token_endpoint": "https://localhost:${https.nio.port}/token",
  "apim.workflow.dcr_endpoint": "https://localhost:${mgt.transport.https.port}/client-registration/v0.14/register",
  "apim.workflow.dcr_username": "${admin.username}",
  "apim.workflow.dcr_password": "${admin.password}",

  "apim.open_tracer.remote_tracer.enable": "false",
  "apim.open_tracer.remote_tracer.name": "zipkin",
  "apim.open_tracer.remote_tracer.properties.hostname": "localhost",
  "apim.open_tracer.remote_tracer.properties.port": "9411",
  "apim.open_tracer.log_tracer.enable": "false"

}