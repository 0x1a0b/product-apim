/*
 *  Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied. See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 *  WSO2 API Manager - Publisher API
 *  This specifies a **RESTful API** for WSO2 **API Manager** - Publisher.  Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.0.4/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher/src/main/resources/publisher-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification.
 *
 *  OpenAPI spec version: 0.10.0
 *  Contact: architecture@wso2.com
 *
 *  NOTE: This class is auto generated by the swagger code generator program.
 *  https://github.com/swagger-api/swagger-codegen.git
 *  Do not edit the class manually.
 *
 */

package org.wso2.carbon.apimgt.rest.integration.tests.api.publisher;

import org.testng.Assert;
import org.testng.annotations.Test;
import org.wso2.carbon.apimgt.rest.integration.tests.publisher.api.LabelCollectionApi;
import org.wso2.carbon.apimgt.rest.integration.tests.publisher.ApiException;
import org.wso2.carbon.apimgt.rest.integration.tests.publisher.model.LabelList;

/**
 * API tests for LabelCollectionApi
 */
public class LabelCollectionApiIT {

    private final LabelCollectionApi api = new LabelCollectionApi();

    @Test(description = "This test verifies if set of labels can be retreived. A label includes label, Id, label name, access URL")
    public void labelsGetTest() throws ApiException {
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        LabelList response = api.labelsGet(ifNoneMatch, ifModifiedSince);

        int labelCount = response.getCount();
        boolean labelCountNotZero = false;
        boolean nameAvailable = false;
        boolean labelIdAvailable = false;

        if (labelCount > 0) {
            labelCountNotZero = true;
        }
        if (response.getList().get(0).getLabelId() != null) {
            labelIdAvailable = true;
        }
        if (response.getList().get(0).getName() != null) {
            nameAvailable = true;
        }

        Assert.assertEquals(labelCountNotZero, true, "label count mismatch");
        Assert.assertEquals(labelIdAvailable, true, "label id mismatch");
        Assert.assertEquals(nameAvailable, true, "label name mismatch");

    }

}
